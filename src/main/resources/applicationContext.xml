<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

<!--读取properties文件-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" value="classpath:jdbc.properties"></property>
    </bean>

    <!--配置c3p0连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <!--连接池初始化时创建的连接数-->
        <property name="initialPoolSize" value="10"></property>
        <!--连接的最大空闲时间，如果超过这个时间，某个数据库连接还没有被使用，则会断开掉这个连接-->
        <property name="maxIdleTime" value="600"></property>
        <!--连接池中拥有的最大连接数-->
        <property name="maxPoolSize" value="100"></property>
        <!--连接池保持的最小连接数-->
        <property name="minPoolSize" value="10"></property>
        <!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements属于单个
         connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。如果maxStatements与
        maxStatementsPerConnection均为0，则缓存被关闭。Default: 0-->
        <property name="maxStatements" value="200"></property>
       <!--每120秒秒检查所有连接池中的空闲连接-->
        <property name="idleConnectionTestPeriod" value="120"></property>
        <!--定义在从数据库获取新连接失败后重复尝试的次数-->
        <property name="acquireRetryAttempts" value="10"></property>
    </bean>

    <!--spring与mybatis完美结合sqlsessionFatroy-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="typeAliasesPackage" value="com.cqyc.ssm.domain"></property>
        <property name="mapperLocations" value="classpath*:com.cqyc.ssm.dao/*.xml"></property>
        <property name="configLocation" value="classpath:mybatis_Config.xml"></property>
    </bean>

    <!--mapper扫描器-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--mapper扫描器，如果需要扫面多个，中间使用英文半角隔开-->
        <property name="basePackage" value="com.cqyc.ssm.dao"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <!--事务管理，对mybatis操作数据库事务控制，spring使用jdbc的事务控制-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--数据源  注入datasource-->
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--配置事务的增强-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="find*" propagation="SUPPORTS"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
    <!--使用AOP配置事务的增强-->
    <aop:config>
        <aop:pointcut id="poincut1" expression="execution(* com.cqyc.ssm.services.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="poincut1"></aop:advisor>
    </aop:config>

    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
    </bean>

    <context:component-scan base-package="com.cqyc.ssm"/>

</beans>
